filename="~/Documents/KAI/cytoskin/after_filt/updated_names_group_comparison/data_log_NAs.png")
write.table(data.pca,file="~/Documents/KAI/cytoskin/after_filt/updated_names_group_comparison/data_all_log2_with_NA.txt",sep="\t",row.names=T,quote=FALSE)
data.pca1=data.pca[,! apply( data.pca , 2 , function(x) all(is.na(x)) ) ]#removes columns with complete NAs
pheatmap(data.pca1, cluster_rows = F, cluster_cols = F,scale = "none", main="data")#data.pca=data.pca[!rowSums(!is.finite(data.pca)),]#remove nas
# remove rows with more than 50 NAs
numNAs <- apply(data.pca1, 1, function(z) sum(is.na(z)))
data.pca.new=data.pca1[!(numNAs > 0.5*length(colnames(data.pca1))),]
pheatmap(data.pca.new, cluster_rows = F, cluster_cols = F, scale = "row", main="data")
dim(data.pca.new)
#remove cols with more than 50% NAs
data.pca=t(data.pca.new)
numNAs <- apply(data.pca, 1, function(z) sum(is.na(z)))
data.pca.new=data.pca[!(numNAs >0.5*length(colnames(data.pca))),]#previously it was 9
data.pca=t(data.pca.new)
pheatmap(data.pca, cluster_rows = F, cluster_cols = F,scale = "none",main="Gene expression. Rows and columns containing >50% missing values were removed",
filename="~/Documents/KAI/cytoskin/after_filt/updated_names_group_comparison/data_log_filt_NAs.png")
dim(data.pca)#35 117
data_log2_filt=data.pca
save(data_log2_filt,file = "~/Documents/KAI/cytoskin/after_filt/updated_names_group_comparison/data_log2_filt.RData")
setwd("~/Documents/KAI/cytoskin/after_filt/updated_names_group_comparison")
rownames(data_log2_filt)=gsub("IL8b","CXCL8", rownames(data_log2_filt))
library(impute)
library(RColorBrewer)
data=data_log2_filt
data.pca.imp=impute.knn(data ,k = 4, rowmax = 0.5, colmax = 0.8, maxp = 1500, rng.seed=36243606)
data.pca.imp=as.data.frame(data.pca.imp$data)
pheatmap(data.pca.imp, cluster_rows = T, cluster_cols = F,clustering_distance_rows = "correlation",
clustering_distance_cols = "correlation",clustering_method = "complete",color = colorRampPalette(rev(brewer.pal(n = 7, name = "RdYlBu")))(250), scale="none",
main="Filtered log-transformed data after imputation. KNN, k=4"
)
pheatmap(data.pca.imp, cluster_rows = T, cluster_cols = F,clustering_distance_rows = "correlation",
clustering_distance_cols = "correlation",clustering_method = "complete",color = colorRampPalette(rev(brewer.pal(n = 7, name = "RdYlBu")))(250), scale="none",
main="Filtered log-transformed data after imputation. KNN, k=4", filename="filtered_imputed_knn4.png")
library(amap)
hc.data=hcluster(data.pca.imp, method = "correlation", diag = FALSE, upper = FALSE,
link = "complete", members = NULL, nbproc = 2,
doubleprecision = TRUE)
plot(hc.data)
save(hc.data,file="hclust.RData")
ct=cutree(hc.data, k=6)
sort(ct)
DataControllsSkin=read.table(file="~/Documents/KAI/cytoskin/after_filt/17112014/removedC024/data.control_newfilt.txt", sep="\t", header=T)
###Psofiasis#
DataPsoriasisSkin=read.table(file="~/Documents/KAI/cytoskin/after_filt/17112014/removedC024/data.psoriasis_newfilt.txt", sep="\t", header=T )
###Vitiliigo#
DataVitiliigoSkin=read.table(file="~/Documents/KAI/cytoskin/after_filt/17112014/removedC024/data.vitiliigo_newfilt.txt", sep="\t", header=T )
###PCA plot of the data
ctrls=DataControllsSkin
rows=as.character(ctrls[,1])
cols=colnames(ctrls)[2:43]
ctrls <- apply(ctrls[,2:43],2,as.numeric)
rownames(ctrls)=rows
ctrls=t(ctrls)
#PSO
pso=t(DataPsoriasisSkin)# psoriasis
rows=rownames(pso[2:43,])
cols=as.character(pso[1,])
ps <- apply(pso[2:43,],2,as.numeric)
colnames(ps)=cols
rownames(ps)=rows
#VIT.
vit=t(DataVitiliigoSkin)# vitiliigo
rows=rownames(vit[2:43,])
cols=as.character(vit[1,])
vi <- apply(vit[2:43,],2,as.numeric)
colnames(vi)=cols
rownames(vi)=rows
library(pheatmap)
data.all=cbind(ctrls, ps,vi)
summary(data.all)
#data.pca=scale(data.all)
data.log=log2(data.all)
data.pca=data.log
library(stringr)
colnames(data.pca)=str_replace(colnames(data.pca),"PH","PSL")#sick
colnames(data.pca)=str_replace(colnames(data.pca),"PT","PSNL")#healthy
colnames(data.pca)=str_replace(colnames(data.pca),"VH","VL")#sick
colnames(data.pca)=str_replace(colnames(data.pca),"VT","VNL")#healthy
rownames(data.pca)=gsub("IL8b","CXCL8", rownames(data.pca))
save(data.pca, file="data.pca.Rdata")
pheatmap(data.pca, cluster_rows = F, cluster_cols = F,scale = "none", main="Gene expression in C, PSL, PSNL, VL and VNL groups",
filename="~/Documents/KAI/cytoskin/after_filt/updated_names_group_comparison/data_log_NAs.png")
#pheatmap(data.pca, cluster_rows = T, cluster_cols = F,scale = "row",
# main="All data scaled, contains NA")
write.table(data.pca,file="~/Documents/KAI/cytoskin/after_filt/updated_names_group_comparison/data_all_log2_with_NA.txt",sep="\t",row.names=T,quote=FALSE)
data.pca1=data.pca[,! apply( data.pca , 2 , function(x) all(is.na(x)) ) ]#removes columns with complete NAs
pheatmap(data.pca1, cluster_rows = F, cluster_cols = F,scale = "none", main="data")#data.pca=data.pca[!rowSums(!is.finite(data.pca)),]#remove nas
# remove rows with more than 50 NAs
numNAs <- apply(data.pca1, 1, function(z) sum(is.na(z)))
data.pca.new=data.pca1[!(numNAs > 0.5*length(colnames(data.pca1))),]
pheatmap(data.pca.new, cluster_rows = F, cluster_cols = F, scale = "row", main="data")
dim(data.pca.new)
#remove cols with more than 50% NAs
data.pca=t(data.pca.new)
numNAs <- apply(data.pca, 1, function(z) sum(is.na(z)))
data.pca.new=data.pca[!(numNAs >0.5*length(colnames(data.pca))),]#previously it was 9
data.pca=t(data.pca.new)
pheatmap(data.pca, cluster_rows = F, cluster_cols = F,scale = "none",main="Gene expression. Rows and columns containing >50% missing values were removed",
filename="~/Documents/KAI/cytoskin/after_filt/updated_names_group_comparison/data_log_filt_NAs.png")
dim(data.pca)#35 117
data_log2_filt=data.pca
save(data_log2_filt,file = "~/Documents/KAI/cytoskin/after_filt/updated_names_group_comparison/data_log2_filt.RData")
library(impute)
library(RColorBrewer)
data=data_log2_filt
data.pca.imp=impute.knn(data ,k = 4, rowmax = 0.5, colmax = 0.8, maxp = 1500, rng.seed=36243606)
##plot the data distribution
#M=as.matrix(data.pca.imp)
#corm = cor(t(M))
#plot(density(corm))
##
data.pca.imp=as.data.frame(data.pca.imp$data)
pheatmap(data.pca.imp, cluster_rows = T, cluster_cols = F,clustering_distance_rows = "correlation",
clustering_distance_cols = "correlation",clustering_method = "complete",color = colorRampPalette(rev(brewer.pal(n = 7, name = "RdYlBu")))(250), scale="none",
main="Filtered log-transformed data after imputation. KNN, k=4", filename="filtered_imputed_knn4.png")
##check the difference between euclidean with NA and without NA
#pheatmap(data.pca.imp, cluster_rows = T, cluster_cols = F,clustering_method = "complete",color = colorRampPalette(rev(brewer.pal(n = 7, name = "RdYlBu")))(250), scale="row", main="All data after imputation. KNN, k=4")
library(a
map)
library(amap)
hc.data=hcluster(data.pca.imp, method = "correlation", diag = FALSE, upper = FALSE,
link = "complete", members = NULL, nbproc = 2,
doubleprecision = TRUE)
plot(hc.data)
ct=cutree(hc.data, k=6)
save(hc.data,ct,file="hclust.RData")
sort(ct)
pheatmap(data.pca, cluster_rows = F, cluster_cols = F,scale = "none", main="Gene expression in C, PSL, PSNL, VL and VNL groups",
filename="data_log_NAs.png")
pheatmap(data.pca, cluster_rows = F, cluster_cols = F,scale = "none", main="Gene expression in C, PSL, PSNL, VL and VNL groups"
)
#controlls
DataControllsSkin=read.table(file="~/Documents/KAI/cytoskin/after_filt/17112014/removedC024/data.control_newfilt.txt", sep="\t", header=T)
###Psofiasis#
DataPsoriasisSkin=read.table(file="~/Documents/KAI/cytoskin/after_filt/17112014/removedC024/data.psoriasis_newfilt.txt", sep="\t", header=T )
###Vitiliigo#
DataVitiliigoSkin=read.table(file="~/Documents/KAI/cytoskin/after_filt/17112014/removedC024/data.vitiliigo_newfilt.txt", sep="\t", header=T )
###PCA plot of the data
ctrls=DataControllsSkin
rows=as.character(ctrls[,1])
cols=colnames(ctrls)[2:43]
ctrls <- apply(ctrls[,2:43],2,as.numeric)
rownames(ctrls)=rows
ctrls=t(ctrls)
#PSO
pso=t(DataPsoriasisSkin)# psoriasis
rows=rownames(pso[2:43,])
cols=as.character(pso[1,])
ps <- apply(pso[2:43,],2,as.numeric)
colnames(ps)=cols
rownames(ps)=rows
#VIT.
vit=t(DataVitiliigoSkin)# vitiliigo
rows=rownames(vit[2:43,])
cols=as.character(vit[1,])
vi <- apply(vit[2:43,],2,as.numeric)
colnames(vi)=cols
rownames(vi)=rows
library(pheatmap)
data.all=cbind(ctrls, ps,vi)
summary(data.all)
#data.pca=scale(data.all)
data.log=log2(data.all)
data.pca=data.log
library(stringr)
colnames(data.pca)=str_replace(colnames(data.pca),"PH","PSL")#sick
colnames(data.pca)=str_replace(colnames(data.pca),"PT","PSNL")#healthy
colnames(data.pca)=str_replace(colnames(data.pca),"VH","VL")#sick
colnames(data.pca)=str_replace(colnames(data.pca),"VT","VNL")#healthy
rownames(data.pca)=gsub("IL8b","CXCL8", rownames(data.pca))
save(data.pca, file="data.pca.Rdata")
pheatmap(data.pca, cluster_rows = F, cluster_cols = F,scale = "none", main="Gene expression in C, PSL, PSNL, VL and VNL groups",
)
pheatmap(data.pca, cluster_rows = F, cluster_cols = F,scale = "none", main="Gene expression in C, PSL, PSNL, VL and VNL groups",
filename="data_log_NAs.png")
setwd("~/Documents/KAI/cytoskin/after_filt/updated_names_group_comparison")
save(data.pca, file="data.pca.Rdata")
pheatmap(data.pca, cluster_rows = F, cluster_cols = F,scale = "none", main="Gene expression in C, PSL, PSNL, VL and VNL groups",
filename="data_log_NAs.png")
pheatmap(data.pca, cluster_rows = F, cluster_cols = F,scale = "none", main="Gene expression in C, PSL, PSNL, VL and VNL groups",
)
data.pca1=data.pca[,! apply( data.pca , 2 , function(x) all(is.na(x)) ) ]#removes columns with complete NAs
pheatmap(data.pca1, cluster_rows = F, cluster_cols = F,scale = "none", main="data")#data.pca=data.pca[!rowSums(!is.finite(data.pca)),]#remove nas
# remove rows with more than 50 NAs
numNAs <- apply(data.pca1, 1, function(z) sum(is.na(z)))
data.pca.new=data.pca1[!(numNAs > 0.5*length(colnames(data.pca1))),]
pheatmap(data.pca.new, cluster_rows = F, cluster_cols = F, scale = "row", main="data")
dim(data.pca.new)
#remove cols with more than 50% NAs
data.pca=t(data.pca.new)
numNAs <- apply(data.pca, 1, function(z) sum(is.na(z)))
data.pca.new=data.pca[!(numNAs >0.5*length(colnames(data.pca))),]#previously it was 9
data.pca=t(data.pca.new)
pheatmap(data.pca, cluster_rows = F, cluster_cols = F,scale = "none",main="Gene expression. Rows and columns containing >50% missing values were removed",
)
dim(data.pca)#35 117
data_log2_filt=data.pca
save(data_log2_filt,file = "~/Documents/KAI/cytoskin/after_filt/updated_names_group_comparison/data_log2_filt.RData")
library(impute)
library(RColorBrewer)
data=data_log2_filt
data.pca.imp=impute.knn(data ,k = 4, rowmax = 0.5, colmax = 0.8, maxp = 1500, rng.seed=36243606)
data.pca.imp=as.data.frame(data.pca.imp$data)
pheatmap(data.pca.imp, cluster_rows = T, cluster_cols = F,clustering_distance_rows = "correlation",
clustering_distance_cols = "correlation",clustering_method = "complete",color = colorRampPalette(rev(brewer.pal(n = 7, name = "RdYlBu")))(250), scale="none",
main="Filtered log-transformed data after imputation. KNN, k=4"
)
library(amap)
hc.data=hcluster(data.pca.imp, method = "correlation", diag = FALSE, upper = FALSE,
link = "complete", members = NULL, nbproc = 2,
doubleprecision = TRUE)
plot(hc.data)
ct=cutree(hc.data, k=6)
save(hc.data,ct,file="hclust.RData")
sort(ct)
save(data.pca.imp,file="imputed_data_knn4.RData")
sort(ct)
hc.cl.1=as.character(names(sort(ct[ct==1])))
hc.cl.2=as.character(names(sort(ct[ct==2])))
hc.cl.3=as.character(names(sort(ct[ct==3])))
hc.cl.4=as.character(names(sort(ct[ct==4])))
hc.cl.5=as.character(names(sort(ct[ct==5])))
hc.cl.6=as.character(names(sort(ct[ct==6])))
library(GOsummaries)
g1=hc.cl.1
g2=hc.cl.2
g3=hc.cl.3
g4=hc.cl.4
g5=hc.cl.5
g6=hc.cl.6
gl=list(Cluster1 = g1, Cluster2 = g2, Cluster3 = g3, Cluster4 = g4, Cluster5 = g5, Cluster6 = g6)
gs = gosummaries(gl,  go_branches = c("BP","CC", "ke", "re"), ordered_query = T,  min_set_size = 2, max_set_size = 10000)
plot(gs, fontsize = 8,  term_length=150)
###add expression. change the formulas from km###
data.pca.imp=cbind(rownames(data.pca.imp), data.pca.imp)
colnames(data.pca.imp)[1]="rn"
data_clust1 <- cbind(data.pca.imp[data.pca.imp$rn%in%hc.cl.1,],1)#add column cluster number
data_clust1=data_clust1[, c(-1)]
colnames(data_clust1)[118]="Cluster"
data_clust2 <- cbind(data.pca.imp[data.pca.imp$rn%in%hc.cl.2,],2)
data_clust2=data_clust2[, c(-1)]
colnames(data_clust2)[118]="Cluster"
data_clust3 <- cbind(data.pca.imp[data.pca.imp$rn%in%hc.cl.3,],3)
data_clust3=data_clust3[, c(-1)]
colnames(data_clust3)[118]="Cluster"
data_clust4 <- cbind(data.pca.imp[data.pca.imp$rn%in%hc.cl.4,],4)
data_clust4=data_clust4[, c(-1)]
colnames(data_clust4)[118]="Cluster"
data_clust5 <- cbind(data.pca.imp[data.pca.imp$rn%in%hc.cl.5,],5)
data_clust5=data_clust5[, c(-1)]
colnames(data_clust5)[118]="Cluster"
data_clust6 <- cbind(data.pca.imp[data.pca.imp$rn%in%hc.cl.6,],6)
data_clust6=data_clust6[, c(-1)]
colnames(data_clust6)[118]="Cluster"
data_clust=rbind(data_clust1,data_clust2,data_clust3,data_clust4,data_clust5,data_clust6)
o<- order(data_clust[,118])###sort by cluster number
data_clust <- data_clust[o, ]###sort by cluster number
head(data_clust)
data_hc=data_clust
library(pheatmap)
library(plyr)
colnames(data_clust)[118]="Cluster"###add column name
#Go summaries
library(stringr)
Groups=colnames(data_clust)
Groups=str_replace(Groups,"C.*","Controls")
Groups=str_replace(Groups,"PSL.*","Psoriasis lesional")
Groups=str_replace(Groups,"PSNL.*","Psoriasis nonlesional")
Groups=str_replace(Groups,"VL.*","Vitiligo lesional")
Groups=str_replace(Groups,"VNL.*","Vitiligo nonlesional")
annotation=cbind(Groups,Groups )
rownames(annotation)=colnames(data_clust)
annot=as.data.frame(annotation[1:117,1])
colnames(annot)="Groups"
Groups=Groups[1:117]
data_clust=data_clust[,1:117]
#colnames(data_clust)=Groups
head(data_clust)
gs_exp = add_expression.gosummaries(gs, exp = data_clust,
annotation = annot)
plot(gs_exp, fontsize = 8, classes = "Groups", term_length=150, filename = "Gosummaries_data_log2_knn4_hc_11012014.pdf")
save(ct,hc.data,data_hc, file = "~/Documents/KAI/cytoskin/after_filt/updated_names_group_comparison/hc.RData")
plot(gs_exp, fontsize = 8, classes = "Groups", term_length=150, filename = "Gosummaries_data_log2_knn4_hc.pdf")
data.pca.imp
dim(data.pca.imp)
dim(data,pca)
dim(data.pca)
head(data.pca.imp[,1:2])
library(pvclust)
result=pvclust(t(data.pca.imp[,2:118]), method.hclust="complete",
method.dist="correlation",
nboot=1000, r=seq(.5,1.4,by=.1), store=FALSE, weight=FALSE)
plot(result)
pvrect(result, alpha=0.95)
install.packages("pvclust")
library(pvclust)
result=pvclust(t(data.pca.imp[,2:118]), method.hclust="complete",
method.dist="correlation",
nboot=1000, r=seq(.5,1.4,by=.1), store=FALSE, weight=FALSE)
plot(result)
pvrect(result, alpha=0.95)
mydata= data.pca.imp[,2:118]
wss <- (nrow(mydata)-1)*sum(apply(mydata,2,var))
for (i in 2:15) wss[i] <- sum(kmeans(mydata,
centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
mydata= data.pca.imp[,2:118]
wss <- (nrow(mydata)-1)*sum(apply(mydata,2,var))
for (i in 2:15) wss[i] <- sum(kmeans(mydata,
centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
mydata= data.pca.imp[,2:118]
wss <- (nrow(mydata)-1)*sum(apply(mydata,2,var))
for (i in 2:15) wss[i] <- sum(kmeans(mydata,
centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
mydata= data.pca.imp[,2:118]
wss <- (nrow(mydata)-1)*sum(apply(mydata,2,var))
for (i in 2:15) wss[i] <- sum(kmeans(mydata,
centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
mydata= data.pca.imp[,2:118]
wss <- (nrow(mydata)-1)*sum(apply(mydata,2,var))
for (i in 2:15) wss[i] <- sum(kmeans(mydata,
centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
mydata= data.pca.imp[,2:118]
wss <- (nrow(mydata)-1)*sum(apply(mydata,2,var))
for (i in 2:15) wss[i] <- sum(kmeans(mydata,
centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
mydata= data.pca.imp[,2:118]
wss <- (nrow(mydata)-1)*sum(apply(mydata,2,var))
for (i in 2:15) wss[i] <- sum(kmeans(mydata,
centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
mydata= data.pca.imp[,2:118]
wss <- (nrow(mydata)-1)*sum(apply(mydata,2,var))
for (i in 2:15) wss[i] <- sum(kmeans(mydata,
centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
mydata= data.pca.imp[,2:118]
wss <- (nrow(mydata)-1)*sum(apply(mydata,2,var))
for (i in 2:15) wss[i] <- sum(kmeans(mydata,
centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
mydata= data.pca.imp[,2:118]
wss <- (nrow(mydata)-1)*sum(apply(mydata,2,var))
for (i in 2:15) wss[i] <- sum(kmeans(mydata,
centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
mydata= data.pca.imp[,2:118]
wss <- (nrow(mydata)-1)*sum(apply(mydata,2,var))
for (i in 2:15) wss[i] <- sum(kmeans(mydata,
centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
mydata= data.pca.imp[,2:118]
wss <- (nrow(mydata)-1)*sum(apply(mydata,2,var))
for (i in 2:15) wss[i] <- sum(kmeans(mydata,
centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
mydata= data.pca.imp[,2:118]
wss <- (nrow(mydata)-1)*sum(apply(mydata,2,var))
for (i in 2:15) wss[i] <- sum(kmeans(mydata,
centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
mydata= data.pca.imp[,2:118]
wss <- (nrow(mydata)-1)*sum(apply(mydata,2,var))
for (i in 2:15) wss[i] <- sum(kmeans(mydata,
centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
mydata= data.pca.imp[,2:118]
wss <- (nrow(mydata)-1)*sum(apply(mydata,2,var))
for (i in 2:15) wss[i] <- sum(kmeans(mydata,
centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
mydata= data.pca.imp[,2:118]
wss <- (nrow(mydata)-1)*sum(apply(mydata,2,var))
for (i in 2:15) wss[i] <- sum(kmeans(mydata,
centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
data.pca.imp=data.pca.imp[,c(-1)]
library(amap)
s=set.seed(1234)
km=Kmeans(data.pca.imp,6,iter.max = 100500, nstart =100,
method = "correlation")\
km=Kmeans(data.pca.imp,6,iter.max = 100500, nstart =100,
method = "correlation")
head(km)
data_clust <- cbind(data.pca.imp,km$cluster)#add column cluster number
o<- order(data_clust[,118])###sort by cluster number
data_clust <- data_clust[o, ]###sort by cluster number
head(data_clust)
data_km=data_clust
library(pheatmap)
library(plyr)
colnames(data_clust)[118]="Cluster"
library(stringr)
Groups=colnames(data_clust)
Groups=str_replace(Groups,"C.*","Controls")
Groups=str_replace(Groups,"PSL.*","Psoriasis lesional")
Groups=str_replace(Groups,"PSNL.*","Psoriasis nonlesional")
Groups=str_replace(Groups,"VL.*","Vitiligo lesional")
Groups=str_replace(Groups,"VNL.*","Vitiligo nonlesional")
annotation=cbind(Groups,Groups )
rownames(annotation)=colnames(data_clust)
annot=as.data.frame(annotation[1:117,1])
colnames(annot)="Groups"
Groups=Groups[1:117]
data_clust=data_clust[,1:117]
#colnames(data_clust)=Groups
head(data_clust)
library(GOsummaries)
#gs_kmeans = gosummaries(km, components = 1:2, exp = data_clust, annotation = annotation)
#plot(gs_kmeans, fontsize = 8, classes = "Groups", filename = "figure3.pdf")
list=sort(km$cluster)
g1=names(list[list==1])
g2=names(list[list==2])
g3=names(list[list==3])
g4=names(list[list==4])
g5=names(list[list==5])
g6=names(list[list==6])
gl=list(Cluster1 = g1, Cluster2 = g2, Cluster3 = g3, Cluster4 = g4, Cluster5 = g5, Cluster6 = g6)
gs = gosummaries(gl,go_branches = c("BP","CC", "ke", "re"), ordered_query = T,  min_set_size = 2, max_set_size = 10000)
plot(gs, fontsize = 8,term_length=150)
km=Kmeans(data.pca.imp,6,iter.max = 100500, nstart =100,
method = "correlation")
# if needed to compare load(file = "~/Documents/KAI/cytoskin/after_filt/17112014/removedC024/km6.RData")
head(km)
km=Kmeans(data.pca.imp,6,iter.max = 100500, nstart =100,
method = "correlation")
head(km)
View(data.pca.imp)
s=set.seed(1234)
km=Kmeans(data.pca.imp,6,iter.max = 100500, nstart =100,
method = "correlation")
# if needed to compare load(file = "~/Documents/KAI/cytoskin/after_filt/17112014/removedC024/km6.RData")
head(km)
data_clust <- cbind(data.pca.imp,km$cluster)#add column cluster number
o<- order(data_clust[,118])###sort by cluster number
data_clust <- data_clust[o, ]###sort by cluster number
head(data_clust)
data_km=data_clust
data_km
library(pheatmap)
library(plyr)
colnames(data_clust)[118]="Cluster"
Groups=colnames(data_clust)
Groups=str_replace(Groups,"C.*","Controls")
Groups=str_replace(Groups,"PSL.*","Psoriasis lesional")
Groups=str_replace(Groups,"PSNL.*","Psoriasis nonlesional")
Groups=str_replace(Groups,"VL.*","Vitiligo lesional")
Groups=str_replace(Groups,"VNL.*","Vitiligo nonlesional")
annotation=cbind(Groups,Groups )
rownames(annotation)=colnames(data_clust)
annot=as.data.frame(annotation[1:117,1])
colnames(annot)="Groups"
Groups=Groups[1:117]
data_clust=data_clust[,1:117]
head(data_clust)
list=sort(km$cluster)
list
g1=names(list[list==1])
g2=names(list[list==2])
g3=names(list[list==3])
g4=names(list[list==4])
g5=names(list[list==5])
g6=names(list[list==6])
gl=list(Cluster1 = g1, Cluster2 = g2, Cluster3 = g3, Cluster4 = g4, Cluster5 = g5, Cluster6 = g6)
gs = gosummaries(gl,go_branches = c("BP","CC", "ke", "re"), ordered_query = T,  min_set_size = 2, max_set_size = 10000)
plot(gs, fontsize = 8,term_length=150)
gl
gs = gosummaries(gl,go_branches = c("BP","CC", "ke", "re"), ordered_query = T,  min_set_size = 2, max_set_size = 10000)
gs = gosummaries(gl,go_branches = c("BP","CC", "ke", "re"), ordered_query = T,  min_set_size = 3, max_set_size = 10000)
ct=cutree(hc.data, k=6)
save(hc.data,ct,file="hclust.RData")
sort(ct)
hc.cl.1=as.character(names(sort(ct[ct==1])))
hc.cl.2=as.character(names(sort(ct[ct==2])))
hc.cl.3=as.character(names(sort(ct[ct==3])))
hc.cl.4=as.character(names(sort(ct[ct==4])))
hc.cl.5=as.character(names(sort(ct[ct==5])))
hc.cl.6=as.character(names(sort(ct[ct==6])))
#GO summaries for HC
library(GOsummaries)
g1=hc.cl.1
g2=hc.cl.2
g3=hc.cl.3
g4=hc.cl.4
g5=hc.cl.5
g6=hc.cl.6
gl=list(Cluster1 = g1, Cluster2 = g2, Cluster3 = g3, Cluster4 = g4, Cluster5 = g5, Cluster6 = g6)
gs = gosummaries(gl,  go_branches = c("BP","CC", "ke", "re"), ordered_query = T,  min_set_size = 2, max_set_size = 10000)
plot(gs, fontsize = 8,  term_length=150)
library(GOsummaries)
gs = gosummaries(gl,  go_branches = c("BP","CC", "ke", "re"), ordered_query = T,  min_set_size = 2, max_set_size = 10000)
