g1=names(list[list==1])
g2=names(list[list==2])
g3=names(list[list==3])
#g4=names(list[list==4])
gl=list(Cluster1 = g1, Cluster2 = g2, Cluster3=g3)#,# Cluster4=g4)
gs = gosummaries(gl)
plot(gs, fontsize = 8)
gs_exp = add_expression.gosummaries(gs, exp = data_clust,
annotation = annot)
plot(gs_exp, fontsize = 8, classes = "Groups")
library(fpc)
plotcluster(mydata, fit$cluster)
hc=hcluster(data.pca.imp, method = "correlation", diag = FALSE, upper = FALSE,
link = "complete", members = NULL, nbproc = 2,
doubleprecision = TRUE)
plot(hc)
library(pvclust)
result=pvclust(t(data.pca.imp), method.hclust="complete",
method.dist="correlation", use.cor="complete.obs",
nboot=10000, r=seq(.5,1.4,by=.1), store=FALSE, weight=FALSE)
result=pvclust(t(data.pca.imp), method.hclust="complete",
method.dist="correlation", use.cor="complete.obs",
nboot=1000, r=seq(.5,1.4,by=.1), store=FALSE, weight=FALSE)
plot(result)
pvrect(result, alpha=0.95)
ph.imp=impute.knn(data.ph ,k = 10, rowmax = 0.5, colmax = 0.8, maxp = 1500, rng.seed=362436069)
ph.imp=as.data.frame(ph.imp$data)
pt.imp=impute.knn(data.pt ,k = 10, rowmax = 0.6, colmax = 0.8, maxp = 1500, rng.seed=362436069)
pt.imp=as.data.frame(pt.imp$data)
vh.imp=impute.knn(data.vh ,k = 10, rowmax = 0.5, colmax = 0.8, maxp = 1500, rng.seed=362436069)
vh.imp=as.data.frame(vh.imp$data)
vt.imp=impute.knn(data.vt ,k = 10, rowmax = 0.5, colmax = 0.8, maxp = 1500, rng.seed=362436069)
vt.imp=as.data.frame(vt.imp$data)
#Combine the imputed parts together
data.pca.imp=cbind(ctrls.imp,ph.imp,pt.imp,vh.imp,vt.imp)
mydata= data.pca.imp
wss <- (nrow(mydata)-1)*sum(apply(mydata,2,var))
for (i in 2:15) wss[i] <- sum(kmeans(mydata,
centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
hc=hcluster(data.pca.imp, method = "correlation", diag = FALSE, upper = FALSE,
link = "complete", members = NULL, nbproc = 2,
doubleprecision = TRUE)
plot(hc)
result=pvclust(t(data.pca.imp), method.hclust="complete",
method.dist="correlation", use.cor="complete.obs",
nboot=1000, r=seq(.5,1.4,by=.1), store=FALSE, weight=FALSE)
plot(result)
pvrect(result, alpha=0.95)
ctrls.imp=impute.knn(data.ctrls ,k = 25, rowmax = 0.5, colmax = 0.8, maxp = 1500, rng.seed=362436069)
ctrls.imp=as.data.frame(ctrls.imp$data)
summary(ctrls.imp)
ph.imp=impute.knn(data.ph ,k = 25, rowmax = 0.5, colmax = 0.8, maxp = 1500, rng.seed=362436069)
ph.imp=as.data.frame(ph.imp$data)
pt.imp=impute.knn(data.pt ,k = 25, rowmax = 0.6, colmax = 0.8, maxp = 1500, rng.seed=362436069)
pt.imp=as.data.frame(pt.imp$data)
vh.imp=impute.knn(data.vh ,k = 25, rowmax = 0.5, colmax = 0.8, maxp = 1500, rng.seed=362436069)
vh.imp=as.data.frame(vh.imp$data)
vt.imp=impute.knn(data.vt ,k = 25, rowmax = 0.5, colmax = 0.8, maxp = 1500, rng.seed=362436069)
vt.imp=as.data.frame(vt.imp$data)
#Combine the imputed parts together
data.pca.imp=cbind(ctrls.imp,ph.imp,pt.imp,vh.imp,vt.imp)
mydata= data.pca.imp
wss <- (nrow(mydata)-1)*sum(apply(mydata,2,var))
for (i in 2:15) wss[i] <- sum(kmeans(mydata,
centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
hc=hcluster(data.pca.imp, method = "correlation", diag = FALSE, upper = FALSE,
link = "complete", members = NULL, nbproc = 2,
doubleprecision = TRUE)
plot(hc)
#plot(hc2)
#g24 <- cutree(hc, k = c(2,4))
#table(grp2 = g24[,"2"], grp4 = g24[,"4"])
library(pvclust)
result=pvclust(t(data.pca.imp), method.hclust="complete",
method.dist="correlation", use.cor="complete.obs",
nboot=1000, r=seq(.5,1.4,by=.1), store=FALSE, weight=FALSE)
plot(result)
pvrect(result, alpha=0.95)
ctrls.imp=impute.knn(data.ctrls ,k = 10, rowmax = 0.5, colmax = 0.8, maxp = 1500, rng.seed=362436069)
ctrls.imp=as.data.frame(ctrls.imp$data)
summary(ctrls.imp)
ph.imp=impute.knn(data.ph ,k = 10, rowmax = 0.5, colmax = 0.8, maxp = 1500, rng.seed=362436069)
ph.imp=as.data.frame(ph.imp$data)
pt.imp=impute.knn(data.pt ,k = 10, rowmax = 0.6, colmax = 0.8, maxp = 1500, rng.seed=362436069)
pt.imp=as.data.frame(pt.imp$data)
vh.imp=impute.knn(data.vh ,k = 10, rowmax = 0.5, colmax = 0.8, maxp = 1500, rng.seed=362436069)
vh.imp=as.data.frame(vh.imp$data)
vt.imp=impute.knn(data.vt ,k = 10, rowmax = 0.5, colmax = 0.8, maxp = 1500, rng.seed=362436069)
vt.imp=as.data.frame(vt.imp$data)
#Combine the imputed parts together
data.pca.imp=cbind(ctrls.imp,ph.imp,pt.imp,vh.imp,vt.imp)
mydata= data.pca.imp
wss <- (nrow(mydata)-1)*sum(apply(mydata,2,var))
for (i in 2:15) wss[i] <- sum(kmeans(mydata,
centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
hc=hcluster(data.pca.imp, method = "correlation", diag = FALSE, upper = FALSE,
link = "complete", members = NULL, nbproc = 2,
doubleprecision = TRUE)
plot(hc)
hc=hcluster(data.pca.imp, method = "correlation", diag = FALSE, upper = FALSE,
link = "complete", members = NULL, nbproc = 2,
doubleprecision = TRUE)
plot(hc)
ctrls.imp=impute.knn(data.ctrls ,k = 10, rowmax = 0.5, colmax = 0.8, maxp = 1500, rng.seed=362436069)
ctrls.imp=as.data.frame(ctrls.imp$data)
summary(ctrls.imp)
ph.imp=impute.knn(data.ph ,k = 10, rowmax = 0.5, colmax = 0.8, maxp = 1500, rng.seed=362436069)
ph.imp=as.data.frame(ph.imp$data)
pt.imp=impute.knn(data.pt ,k = 10, rowmax = 0.6, colmax = 0.8, maxp = 1500, rng.seed=362436069)
pt.imp=as.data.frame(pt.imp$data)
vh.imp=impute.knn(data.vh ,k = 10, rowmax = 0.5, colmax = 0.8, maxp = 1500, rng.seed=362436069)
vh.imp=as.data.frame(vh.imp$data)
vt.imp=impute.knn(data.vt ,k = 10, rowmax = 0.5, colmax = 0.8, maxp = 1500, rng.seed=362436069)
vt.imp=as.data.frame(vt.imp$data)
#Combine the imputed parts together
data.pca.imp=cbind(ctrls.imp,ph.imp,pt.imp,vh.imp,vt.imp)
hc=hcluster(data.pca.imp, method = "correlation", diag = FALSE, upper = FALSE,
link = "complete", members = NULL, nbproc = 2,
doubleprecision = TRUE)
plot(hc)
library(pvclust)
result=pvclust(t(data.pca.imp), method.hclust="complete",
method.dist="correlation", use.cor="complete.obs",
nboot=1000, r=seq(.5,1.4,by=.1), store=FALSE, weight=FALSE)
plot(result)
pvrect(result, alpha=0.95)
result=pvclust(t(data.pca.imp), method.hclust="complete",
method.dist="correlation", use.cor="complete.obs",
nboot=1000, r=seq(.5,1.4,by=.1), store=FALSE, weight=FALSE)
plot(result)
pvrect(result, alpha=0.95)
ctrls.imp=impute.knn(data.ctrls ,k = 4, rowmax = 0.5, colmax = 0.8, maxp = 1500, rng.seed=362436069)
ctrls.imp=as.data.frame(ctrls.imp$data)
summary(ctrls.imp)
ph.imp=impute.knn(data.ph ,k = 4, rowmax = 0.5, colmax = 0.8, maxp = 1500, rng.seed=362436069)
ph.imp=as.data.frame(ph.imp$data)
pt.imp=impute.knn(data.pt ,k = 4, rowmax = 0.6, colmax = 0.8, maxp = 1500, rng.seed=362436069)
pt.imp=as.data.frame(pt.imp$data)
vh.imp=impute.knn(data.vh ,k = 4, rowmax = 0.5, colmax = 0.8, maxp = 1500, rng.seed=362436069)
vh.imp=as.data.frame(vh.imp$data)
vt.imp=impute.knn(data.vt ,k = 4, rowmax = 0.5, colmax = 0.8, maxp = 1500, rng.seed=362436069)
vt.imp=as.data.frame(vt.imp$data)
#Combine the imputed parts together
data.pca.imp=cbind(ctrls.imp,ph.imp,pt.imp,vh.imp,vt.imp)
hc=hcluster(data.pca.imp, method = "correlation", diag = FALSE, upper = FALSE,
link = "complete", members = NULL, nbproc = 2,
doubleprecision = TRUE)
plot(hc)
#plot(hc2)
#g24 <- cutree(hc, k = c(2,4))
#table(grp2 = g24[,"2"], grp4 = g24[,"4"])
library(pvclust)
result=pvclust(t(data.pca.imp), method.hclust="complete",
method.dist="correlation", use.cor="complete.obs",
nboot=1000, r=seq(.5,1.4,by=.1), store=FALSE, weight=FALSE)
plot(result)
pvrect(result, alpha=0.95)
result=pvclust(t(data.pca.imp), method.hclust="complete",
method.dist="correlation", use.cor="complete.obs",
nboot=4000, r=seq(.5,1.4,by=.1), store=FALSE, weight=FALSE)
plot(result)
pvrect(result, alpha=0.95)
result=pvclust(t(data.pca.imp), method.hclust="complete",
method.dist="pearson", use.cor="complete.obs",
nboot=4000, r=seq(.5,1.4,by=.1), store=FALSE, weight=FALSE)
plot(result)
pvrect(result, alpha=0.95)
?pvclust
result=pvclust(t(data.pca.imp), method.hclust="complete",
method.dist="euclidean", use.cor="complete.obs",
nboot=4000, r=seq(.5,1.4,by=.1), store=FALSE, weight=FALSE)
plot(result)
pvrect(result, alpha=0.95)
hc=hcluster(data.pca.imp, method = "euclidean", diag = FALSE, upper = FALSE, # method = "correlation"
link = "complete", members = NULL, nbproc = 2,
doubleprecision = TRUE)
plot(hc)
#plot(hc2)
#g24 <- cutree(hc, k = c(2,4))
#table(grp2 = g24[,"2"], grp4 = g24[,"4"])
library(pvclust)
result=pvclust(t(data.pca.imp), method.hclust="complete",
method.dist="euclidean", use.cor="complete.obs",
nboot=1000, r=seq(.5,1.4,by=.1), store=FALSE, weight=FALSE)
plot(result)
pvrect(result, alpha=0.95)
result=pvclust(t(data.pca.imp), method.hclust="complete",
method.dist="abspearson", use.cor="complete.obs",
nboot=4000, r=seq(.5,1.4,by=.1), store=FALSE, weight=FALSE)
plot(result)
pvrect(result, alpha=0.95)
result=pvclust(t(data.pca), method.hclust="complete",
method.dist="abspearson", use.cor="all.obs",
nboot=4000, r=seq(.5,1.4,by=.1), store=FALSE, weight=FALSE)
plot(result)
pvrect(result, alpha=0.95)
result=pvclust(t(data.pca), method.hclust="complete",
method.dist="correlation", use.cor="all.obs",
nboot=4000, r=seq(.5,1.4,by=.1), store=FALSE, weight=FALSE)
plot(result)
pvrect(result, alpha=0.95)
result=pvclust(t(data.pca), method.hclust="complete",
method.dist="correlation", use.cor="all.obs",
nboot=4000, r=seq(.5,1.4,by=.1), store=FALSE, weight=FALSE)
result=pvclust(t(data.pca), method.hclust="complete",
method.dist="correlation", use.cor="complete.obs",
nboot=4000, r=seq(.5,1.4,by=.1), store=FALSE, weight=FALSE)
plot(result)
pvrect(result, alpha=0.95)
result=pvclust(t(data.pca.imp), method.hclust="complete",
method.dist="correlation", use.cor="complete.obs",
nboot=10000, r=seq(.5,1.4,by=.1), store=FALSE, weight=FALSE)
plot(result)
pvrect(result, alpha=0.95)
pvrect(result, alpha=0.93)
plot(result)
pvrect(result, alpha=0.90)
result=pvclust(t(data.pca.imp), method.hclust="median",
method.dist="correlation", use.cor="complete.obs",
nboot=1000, r=seq(.5,1.4,by=.1), store=FALSE, weight=FALSE)
plot(result)
pvrect(result, alpha=0.90)
plot(result)
pvrect(result, alpha=0.95)
pvrect(result, alpha=0.94)
result=pvclust(t(data.pca.imp), method.hclust="centroid",
method.dist="correlation", use.cor="complete.obs",
nboot=1000, r=seq(.5,1.4,by=.1), store=FALSE, weight=FALSE)
plot(result)
pvrect(result, alpha=0.94)
plot(result)
pvrect(result, alpha=0.95)
hc=hcluster(data.pca.imp, method = "correlation", diag = FALSE, upper = FALSE,
link = "average", members = NULL, nbproc = 2,
doubleprecision = TRUE)
doubleprecision = TRUE)
plot(hc)
data.pca=cbind(ctrls, ps,vi)
pheatmap(data.pca, cluster_rows = F, cluster_cols = F,scale = "row", main="data")
write.table(data.pca,file="data_all_filt.txt",sep="\t",row.names=F,quote=FALSE)
data.pca1=data.pca[,! apply( data.pca , 2 , function(x) all(is.na(x)) ) ]#removes columns with complete NAs
pheatmap(data.pca1, cluster_rows = F, cluster_cols = F,scale = "row", main="data")#data.pca=data.pca[!rowSums(!is.finite(data.pca)),]#remove nas
numNAs <- apply(data.pca1, 1, function(z) sum(is.na(z)))
# remove rows with more than 50 NAs
data.pca.new=data.pca1[!(numNAs > 50),]
pheatmap(data.pca.new, cluster_rows = F, cluster_cols = F, scale = "row", main="data")
#remove cols with more than 28 NAs
data.pca=t(data.pca.new)
numNAs <- apply(data.pca, 1, function(z) sum(is.na(z)))
data.pca.new=data.pca[!(numNAs >28 ),]#previously it was 9
data.pca=t(data.pca.new)
#Impute the missing data using k nearest neighbours all data together
library(impute)
data=data.pca
data.pca.imp=impute.knn(data ,k = 4, rowmax = 0.5, colmax = 0.8, maxp = 1500, rng.seed=362436069)
data.pca.imp=as.data.frame(data.pca.imp$data)
pheatmap(data.pca.imp, cluster_rows = T, cluster_cols = F,sclustering_distance_rows = "correlation",color = colorRampPalette(rev(brewer.pal(n = 7, name = "RdYlBu")))(250), scale="row", main="imputed data")
library(amap)
s=set.seed(1234)
km=Kmeans(data.pca.imp,3,iter.max = 15000, nstart = 34,
method = "correlation")
head(km)
data_clust <- cbind(data.pca.imp,km$cluster)#add column cluster number
o<- order(data_clust[,116 ])###sort by cluster number
data_clust <- data_clust[o, ]###sort by cluster number
head(data_clust)
library(pheatmap)
library(plyr)
colnames(data_clust)[116]="Cluster"###add column name
#Go summaries
library(stringr)
Groups=colnames(data_clust)
Groups=str_replace(Groups,"C.*","C")
Groups=str_replace(Groups,"PH.*","PH")
Groups=str_replace(Groups,"PT.*","PT")
Groups=str_replace(Groups,"VH.*","VH")
Groups=str_replace(Groups,"VT.*","VT")
annotation=cbind(Groups,Groups )
rownames(annotation)=colnames(data_clust)
annot=as.data.frame(annotation[1:115,1])
colnames(annot)="Groups"
Groups=Groups[1:115]
data_clust=data_clust[,1:115]
#colnames(data_clust)=Groups
head(data_clust)
library(GOsummaries)
#gs_kmeans = gosummaries(km, components = 1:2, exp = data_clust, annotation = annotation)
#plot(gs_kmeans, fontsize = 8, classes = "Groups", filename = "figure3.pdf")
list=sort(km$cluster)
g1=names(list[list==1])
g2=names(list[list==2])
g3=names(list[list==3])
#g4=names(list[list==4])
gl=list(Cluster1 = g1, Cluster2 = g2, Cluster3=g3)#,# Cluster4=g4)
gs = gosummaries(gl)
plot(gs, fontsize = 8)
gs_exp = add_expression.gosummaries(gs, exp = data_clust,
annotation = annot)
plot(gs_exp, fontsize = 8, classes = "Groups")
mydata= data.pca.imp
wss <- (nrow(mydata)-1)*sum(apply(mydata,2,var))
for (i in 2:15) wss[i] <- sum(kmeans(mydata,
centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
hc=hcluster(data.pca.imp, method = "correlation", diag = FALSE, upper = FALSE,
link = "average", members = NULL, nbproc = 2,
doubleprecision = TRUE)
plot(hc)
hc=hcluster(data.pca.imp, method = "correlation", diag = FALSE, upper = FALSE,
link = "centroid", members = NULL, nbproc = 2,
doubleprecision = TRUE)
plot(hc)
hc=hcluster(data.pca.imp, method = "correlation", diag = FALSE, upper = FALSE,
link = "median", members = NULL, nbproc = 2,
doubleprecision = TRUE)
plot(hc)
hc=hcluster(data.pca.imp, method = "correlation", diag = FALSE, upper = FALSE,
link = "single", members = NULL, nbproc = 2,
doubleprecision = TRUE)
plot(hc)
data=data.pca
data.pca.imp=impute.knn(data ,k = 4, rowmax = 0.5, colmax = 0.8, maxp = 1500, rng.seed=362436069)
data.pca.imp=as.data.frame(data.pca.imp$data)
pheatmap(data.pca.imp, cluster_rows = T, cluster_cols = T,sclustering_distance_rows = "correlation",clustering_distance_cols = "correlation",color = colorRampPalette(rev(brewer.pal(n = 7, name = "RdYlBu")))(250), scale="row", main="imputed data")
pheatmap(data.pca.imp, cluster_rows = T, cluster_cols = T,sclustering_distance_rows = "correlation",clustering_distance_cols = "correlation",color = colorRampPalette(rev(brewer.pal(n = 7, name = "RdYlBu")))(250), scale="column", main="imputed data")
scale_rows = function(x){
m = apply(x, 1, mean, na.rm = T)
s = apply(x, 1, sd, na.rm = T)
return((x - m) / s)
}
data.pca=cbind(ctrls, ps,vi)
summary(data.pca)
scale_rows = function(x){
m = apply(x, 1, mean, na.rm = T)
s = apply(x, 1, sd, na.rm = T)
return((x - m) / s)
}
data.pca=scale_rows(data.pca)
summary(data.pca)
pheatmap(data.pca, cluster_rows = F, cluster_cols = F,scale = "row", main="data")
data.pca1=data.pca[,! apply( data.pca , 2 , function(x) all(is.na(x)) ) ]#removes columns with complete NAs
pheatmap(data.pca1, cluster_rows = F, cluster_cols = F,scale = "row", main="data")#data.pca=data.pca[!rowSums(!is.finite(data.pca)),]#remove nas
numNAs <- apply(data.pca1, 1, function(z) sum(is.na(z)))
# remove rows with more than 50 NAs
data.pca.new=data.pca1[!(numNAs > 50),]
pheatmap(data.pca.new, cluster_rows = F, cluster_cols = F, scale = "row", main="data")
#remove cols with more than 28 NAs
data.pca=t(data.pca.new)
numNAs <- apply(data.pca, 1, function(z) sum(is.na(z)))
data.pca.new=data.pca[!(numNAs >28 ),]#previously it was 9
data.pca=t(data.pca.new)
#scale
data.pca=scale_rows(data.pca)
summary(data.pca)
data.pca=cbind(ctrls, ps,vi)
summary(data.pca)
scale_rows = function(x){
m = apply(x, 1, mean, na.rm = T)
s = apply(x, 1, sd, na.rm = T)
return((x - m) / s)
}
pheatmap(data.pca, cluster_rows = F, cluster_cols = F,scale = "row", main="data")
write.table(data.pca,file="data_all_filt.txt",sep="\t",row.names=F,quote=FALSE)
data.pca1=data.pca[,! apply( data.pca , 2 , function(x) all(is.na(x)) ) ]#removes columns with complete NAs
pheatmap(data.pca1, cluster_rows = F, cluster_cols = F,scale = "row", main="data")#data.pca=data.pca[!rowSums(!is.finite(data.pca)),]#remove nas
numNAs <- apply(data.pca1, 1, function(z) sum(is.na(z)))
# remove rows with more than 50 NAs
data.pca.new=data.pca1[!(numNAs > 50),]
pheatmap(data.pca.new, cluster_rows = F, cluster_cols = F, scale = "row", main="data")
#remove cols with more than 28 NAs
data.pca=t(data.pca.new)
numNAs <- apply(data.pca, 1, function(z) sum(is.na(z)))
data.pca.new=data.pca[!(numNAs >28 ),]#previously it was 9
data.pca=t(data.pca.new)
#scale
data.pca=scale_rows(data.pca)
summary(data.pca)
pheatmap(data.pca, cluster_rows = F, cluster_cols = F, main="Filtered and scaled data")
View(data.pca)
data=data.pca
data.pca.imp=impute.knn(data ,k = 4, rowmax = 0.5, colmax = 0.8, maxp = 1500, rng.seed=362436069)
data.pca.imp=as.data.frame(data.pca.imp$data)
pheatmap(data.pca.imp, cluster_rows = T, cluster_cols = T,sclustering_distance_rows = "correlation",clustering_distance_cols = "correlation",color = colorRampPalette(rev(brewer.pal(n = 7, name = "RdYlBu")))(250), scale="column", main="imputed data")
pheatmap(data.pca.imp, cluster_rows = T, cluster_cols = T,sclustering_distance_rows = "correlation",clustering_distance_cols = "correlation",color = colorRampPalette(rev(brewer.pal(n = 7, name = "RdYlBu")))(250), scale="row", main="imputed data")
pheatmap(data.pca.imp, cluster_rows = T, cluster_cols = F,sclustering_distance_rows = "correlation",clustering_distance_cols = "correlation",color = colorRampPalette(rev(brewer.pal(n = 7, name = "RdYlBu")))(250), scale="row", main="imputed data")
mydata= data.pca.imp
wss <- (nrow(mydata)-1)*sum(apply(mydata,2,var))
for (i in 2:15) wss[i] <- sum(kmeans(mydata,
centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
hc=hcluster(data.pca.imp, method = "correlation", diag = FALSE, upper = FALSE,
link = "complete", members = NULL, nbproc = 2,
doubleprecision = TRUE)
hc=hcluster(data.pca.imp, method = "correlation", diag = FALSE, upper = FALSE,
link = "single", members = NULL, nbproc = 2,
doubleprecision = TRUE)
plot(hc)
library(amap)
s=set.seed(1234)
km=Kmeans(data.pca.imp,5,iter.max = 15000, nstart = 34,
method = "correlation")
head(km)
data_clust <- cbind(data.pca.imp,km$cluster)#add column cluster number
o<- order(data_clust[,116 ])###sort by cluster number
data_clust <- data_clust[o, ]###sort by cluster number
head(data_clust)
library(pheatmap)
library(plyr)
colnames(data_clust)[116]="Cluster"###add column name
#Go summaries
library(stringr)
Groups=colnames(data_clust)
Groups=str_replace(Groups,"C.*","C")
Groups=str_replace(Groups,"PH.*","PH")
Groups=str_replace(Groups,"PT.*","PT")
Groups=str_replace(Groups,"VH.*","VH")
Groups=str_replace(Groups,"VT.*","VT")
annotation=cbind(Groups,Groups )
rownames(annotation)=colnames(data_clust)
annot=as.data.frame(annotation[1:115,1])
colnames(annot)="Groups"
Groups=Groups[1:115]
data_clust=data_clust[,1:115]
#colnames(data_clust)=Groups
head(data_clust)
library(GOsummaries)
#gs_kmeans = gosummaries(km, components = 1:2, exp = data_clust, annotation = annotation)
#plot(gs_kmeans, fontsize = 8, classes = "Groups", filename = "figure3.pdf")
list=sort(km$cluster)
g1=names(list[list==1])
g2=names(list[list==2])
g3=names(list[list==3])
#g4=names(list[list==4])
gl=list(Cluster1 = g1, Cluster2 = g2, Cluster3=g3)#,# Cluster4=g4)
gs = gosummaries(gl)
plot(gs, fontsize = 8)
gs_exp = add_expression.gosummaries(gs, exp = data_clust,
annotation = annot)
plot(gs_exp, fontsize = 8, classes = "Groups")
list=sort(km$cluster)
g1=names(list[list==1])
g2=names(list[list==2])
g3=names(list[list==3])
g4=names(list[list==4])
g5=names(list[list==5])
gl=list(Cluster1 = g1, Cluster2 = g2, Cluster3=g3)#,# Cluster4=g4)
gs = gosummaries(gl)
plot(gs, fontsize = 8)
list=sort(km$cluster)
g1=names(list[list==1])
g2=names(list[list==2])
g3=names(list[list==3])
g4=names(list[list==4])
g5=names(list[list==5])
gl=list(Cluster1 = g1, Cluster2 = g2, Cluster3=g3, Cluster4=g4, Cluster5=g5)
gs = gosummaries(gl)
plot(gs, fontsize = 8)
gs_exp = add_expression.gosummaries(gs, exp = data_clust,
annotation = annot)
plot(gs_exp, fontsize = 8, classes = "Groups")
list
g1=names(list[list==1])
g2=names(list[list==2])
g3=names(list[list==3])
g4=names(list[list==4])
g5=names(list[list==5])
gl=list(Cluster1 = g1, Cluster2 = g2, Cluster3=g3,Cluster4=g4,Cluster5=g5)
gs = gosummaries(gl)
rm(gs)
library(GOsummaries)
gs = gosummaries(gl)
source("http://bioconductor.org/biocLite.R")
biocLite("GOsummaries")
gs = gosummaries(gl)
?scale
mt=(c(2,2,2),c(3,3,3))
B = matrix(
+   c(2, 4, 3, 1, 5, 7),
+   nrow=3,
+   ncol=2)
B = matrix(c(2, 2,2, 3, 3, 3), nrow=3,ncol=2)
b
B
B1=scale(B)
b1
B1
B = matrix(c(2,4,6, 3, 4, 8), nrow=3,ncol=2)
B
B1=scale(B)
B1
sd(B[,1])
sd(B[,2])
scale_row(B)
scale_rows(B)
B
m = apply(B, 1, mean, na.rm = T)
m
B
s = apply(B, 1, sd, na.rm = T)
s
B-m
(B-m)/s
0/1,4
0/1.4
