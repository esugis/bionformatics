rows=rownames(pso[2:43,])
cols=as.character(pso[1,])
ps <- apply(pso[2:43,],2,as.numeric)
colnames(ps)=cols
rownames(ps)=rows
#VIT.
vit=t(DataVitiliigoSkin)# vitiliigo
rows=rownames(vit[2:43,])
cols=as.character(vit[1,])
vi <- apply(vit[2:43,],2,as.numeric)
colnames(vi)=cols
rownames(vi)=rows
library(pheatmap)
data.all=cbind(ctrls, ps,vi)
summary(data.all)
data.pca=scale(data.all)
pheatmap(data.pca, cluster_rows = F, cluster_cols = F,scale = "row", main="All data scaled, contains NA")
write.table(data.pca,file="~/Documents/KAI/cytoskin/after_filt/31102014/data_all_scaled_with_NA.txt",sep="\t",row.names=T,quote=FALSE)
data.pca1=data.pca[,! apply( data.pca , 2 , function(x) all(is.na(x)) ) ]#removes columns with complete NAs
pheatmap(data.pca1, cluster_rows = F, cluster_cols = F,scale = "row", main="data")#data.pca=data.pca[!rowSums(!is.finite(data.pca)),]#remove nas
numNAs <- apply(data.pca1, 1, function(z) sum(is.na(z)))
data.pca.new=data.pca1[!(numNAs > 0.5*length(colnames(data.pca1))),]
pheatmap(data.pca.new, cluster_rows = T, cluster_cols = F, scale = "row", main="data")
dim(data.pca.new)
data.pca=t(data.pca.new)
numNAs <- apply(data.pca, 1, function(z) sum(is.na(z)))
numNAs
length(colnames(data.pca))
data.pca.new=data.pca[!(numNAs >0.5*length(colnames(data.pca))),]#previously it was 9
data.pca=t(data.pca.new)
dim(data.pca)
pheatmap(data.pca.new, cluster_rows = F, cluster_cols = F, scale = "row", main="data")
pheatmap(data.pca, cluster_rows = F, cluster_cols = F,scale = "row",main="All data scaled, contains NA")
dim(data.pca)
data=data.pca
save(data, file = "data.RData")
library(impute)
library(RColorBrewer)
data=data.pca
data.pca.imp=impute.knn(data ,k = 4, rowmax = 0.5, colmax = 0.8, maxp = 1500, rng.seed=362436069)
data.pca.imp=as.data.frame(data.pca.imp$data)
pheatmap(data.pca.imp, cluster_rows = T, cluster_cols = F,sclustering_distance_rows = "correlation",clustering_distance_cols = "correlation",clustering_method = "complete",color = colorRampPalette(rev(brewer.pal(n = 7, name = "RdYlBu")))(250), scale="row", main="All data after imputation. KNN, k=4")
pheatmap(data.pca, cluster_rows = T, cluster_cols = F,scale = "row",main="All data scaled, contains NA")
pheatmap(data.pca.imp, cluster_rows = T, cluster_cols = F,clustering_method = "complete",color = colorRampPalette(rev(brewer.pal(n = 7, name = "RdYlBu")))(250), scale="row", main="All data after imputation. KNN, k=4")
hc.data=hcluster(data.pca, method = "euclidean", diag = FALSE, upper = FALSE,
link = "complete", members = NULL, nbproc = 2,
doubleprecision = TRUE)
hc.data=hcluster(data.pca, method = "euclidean", diag = FALSE, upper = FALSE,
link = "complete", members = NULL, nbproc = 2,
doubleprecision = TRUE)
cuttree(hc.data, k=5)
plot(hc.data)
cutree(hc.data, k=5)
hc.data=hcluster(data.pca, method = "correlation", diag = FALSE, upper = FALSE,
link = "complete", members = NULL, nbproc = 2,
doubleprecision = TRUE)
cutree(hc.data, k=5)
plot(hc.data)
pheatmap(data.pca.imp, cluster_rows = T, cluster_cols = F,clustering_method = "complete",color = colorRampPalette(rev(brewer.pal(n = 7, name = "RdYlBu")))(250), scale="row", main="All data after imputation. KNN, k=4")
hclust(data.pca)
data=data.pca
data.pca.imp=impute.knn(data ,k = 2, rowmax = 0.5, colmax = 0.8, maxp = 1500, rng.seed=362436069)
data.pca.imp=as.data.frame(data.pca.imp$data)
pheatmap(data.pca.imp, cluster_rows = T, cluster_cols = F,clustering_distance_rows = "correlation",clustering_distance_cols = "correlation",clustering_method = "complete",color = colorRampPalette(rev(brewer.pal(n = 7, name = "RdYlBu")))(250), scale="row", main="All data after imputation. KNN, k=4")
#check the difference between euclidean with NA and without NA
pheatmap(data.pca.imp, cluster_rows = T, cluster_cols = F,clustering_method = "complete",color = colorRampPalette(rev(brewer.pal(n = 7, name = "RdYlBu")))(250), scale="row", main="All data after imputation. KNN, k=4")
data.pca.imp=impute.knn(data ,k = 1, rowmax = 0.5, colmax = 0.8, maxp = 1500, rng.seed=362436069)
data.pca.imp=as.data.frame(data.pca.imp$data)
pheatmap(data.pca.imp, cluster_rows = T, cluster_cols = F,clustering_distance_rows = "correlation",clustering_distance_cols = "correlation",clustering_method = "complete",color = colorRampPalette(rev(brewer.pal(n = 7, name = "RdYlBu")))(250), scale="row", main="All data after imputation. KNN, k=4")
data.pca.imp=impute.knn(data ,k = 3, rowmax = 0.5, colmax = 0.8, maxp = 1500, rng.seed=362436069)
data.pca.imp=as.data.frame(data.pca.imp$data)
pheatmap(data.pca.imp, cluster_rows = T, cluster_cols = F,clustering_distance_rows = "correlation",clustering_distance_cols = "correlation",clustering_method = "complete",color = colorRampPalette(rev(brewer.pal(n = 7, name = "RdYlBu")))(250), scale="row", main="All data after imputation. KNN, k=4")
data.pca=data.pca.imp
#data.pca=data.pca.new
data.pca=t(data.pca)
pca.all=prcomp(data.pca, scale=T, center=T)#, na.action=na.omit)
#pca.all=prcomp(~., data=data.pca, scale=T, center=T, na.action=na.omit)
summary(pca.all)
data.pca.imp=impute.knn(data ,k = 2, rowmax = 0.5, colmax = 0.8, maxp = 1500, rng.seed=362436069)
data.pca.imp=as.data.frame(data.pca.imp$data)
pheatmap(data.pca.imp, cluster_rows = T, cluster_cols = F,clustering_distance_rows = "correlation",clustering_distance_cols = "correlation",clustering_method = "complete",color = colorRampPalette(rev(brewer.pal(n = 7, name = "RdYlBu")))(250), scale="row", main="All data after imputation. KNN, k=4")
data.pca=data.pca.imp
#data.pca=data.pca.new
data.pca=t(data.pca)
pca.all=prcomp(data.pca, scale=T, center=T)#, na.action=na.omit)
#pca.all=prcomp(~., data=data.pca, scale=T, center=T, na.action=na.omit)
summary(pca.all)
data.pca=t(data.pca.new)
numNAs <- apply(data.pca, 1, function(z) sum(is.na(z)))
data.pca.new=data.pca[!(numNAs >0.5*length(colnames(data.pca))),]#previously it was 9
data.pca=t(data.pca.new)
pheatmap(data.pca, cluster_rows = T, cluster_cols = F,scale = "row",main="All data scaled, contains NA")
dim(data.pca)
data.pca=t(data.pca.new)
pheatmap(data.pca, cluster_rows = T, cluster_cols = F,scale = "row",main="All data scaled, contains NA")
#cluster data with rwmoved 50% of Nas in columns and rows
dim(data.pca)
data.pca=t(data.pca.new)
dim(data.pca)
pheatmap(data.pca, cluster_rows = T, cluster_cols = F,scale = "row",main="All data scaled, contains NA")
data=data.pca
View(data.pca)
data.pca=t(data.pca)
pheatmap(data.pca, cluster_rows = T, cluster_cols = F,scale = "row",main="All data scaled, contains NA")
data=data.pca
data.pca.imp=impute.knn(data ,k = 2, rowmax = 0.5, colmax = 0.8, maxp = 1500, rng.seed=362436069)
data.pca.imp=as.data.frame(data.pca.imp$data)
pheatmap(data.pca.imp, cluster_rows = T, cluster_cols = F,clustering_distance_rows = "correlation",clustering_distance_cols = "correlation",clustering_method = "complete",color = colorRampPalette(rev(brewer.pal(n = 7, name = "RdYlBu")))(250), scale="row", main="All data after imputation. KNN, k=4")
#
data.pca.knn=data.pca.imp
#data.pca=data.pca.new
data.pca.knn=t(data.pca.knn)
pca.all=prcomp(data.pca.knn, scale=T, center=T)#, na.action=na.omit)
#pca.all=prcomp(~., data=data.pca, scale=T, center=T, na.action=na.omit)
summary(pca.all)
data=data.pca
data.pca.imp=impute.knn(data ,k = 4, rowmax = 0.5, colmax = 0.8, maxp = 1500, rng.seed=362436069)
data.pca.imp=as.data.frame(data.pca.imp$data)
pheatmap(data.pca.imp, cluster_rows = T, cluster_cols = F,clustering_distance_rows = "correlation",clustering_distance_cols = "correlation",clustering_method = "complete",color = colorRampPalette(rev(brewer.pal(n = 7, name = "RdYlBu")))(250), scale="row", main="All data after imputation. KNN, k=4")
#check the difference between euclidean with NA and without NA
pheatmap(data.pca.imp, cluster_rows = T, cluster_cols = F,clustering_method = "complete",color = colorRampPalette(rev(brewer.pal(n = 7, name = "RdYlBu")))(250), scale="row", main="All data after imputation. KNN, k=4")
data=data.pca
data.pca.imp=impute.knn(data ,k = 2, rowmax = 0.5, colmax = 0.8, maxp = 1500, rng.seed=362436069)
data.pca.imp=as.data.frame(data.pca.imp$data)
pheatmap(data.pca.imp, cluster_rows = T, cluster_cols = F,clustering_distance_rows = "correlation",clustering_distance_cols = "correlation",clustering_method = "complete",color = colorRampPalette(rev(brewer.pal(n = 7, name = "RdYlBu")))(250), scale="row", main="All data after imputation. KNN, k=4")
#check the difference between euclidean with NA and without NA
pheatmap(data.pca.imp, cluster_rows = T, cluster_cols = F,clustering_method = "complete",color = colorRampPalette(rev(brewer.pal(n = 7, name = "RdYlBu")))(250), scale="row", main="All data after imputation. KNN, k=4")
pheatmap(data.pca.imp, cluster_rows = T, cluster_cols = F,clustering_distance_rows = "correlation",clustering_distance_cols = "correlation",clustering_method = "complete",color = colorRampPalette(rev(brewer.pal(n = 7, name = "RdYlBu")))(250), scale="row", main="All data after imputation. KNN, k=4")
data=data.pca
data.pca.imp=impute.knn(data ,k = 4, rowmax = 0.5, colmax = 0.8, maxp = 1500, rng.seed=362436069)
data.pca.imp=as.data.frame(data.pca.imp$data)
pheatmap(data.pca.imp, cluster_rows = T, cluster_cols = F,clustering_distance_rows = "correlation",clustering_distance_cols = "correlation",clustering_method = "complete",color = colorRampPalette(rev(brewer.pal(n = 7, name = "RdYlBu")))(250), scale="row", main="All data after imputation. KNN, k=4")
data=data.pca
data.pca.imp=impute.knn(data ,k = 2, rowmax = 0.5, colmax = 0.8, maxp = 1500, rng.seed=362436069)
data.pca.imp=as.data.frame(data.pca.imp$data)
pheatmap(data.pca.imp, cluster_rows = T, cluster_cols = F,clustering_distance_rows = "correlation",clustering_distance_cols = "correlation",clustering_method = "complete",color = colorRampPalette(rev(brewer.pal(n = 7, name = "RdYlBu")))(250), scale="row", main="All data after imputation. KNN, k=4")
#check the difference between euclidean with NA and without NA
pheatmap(data.pca.imp, cluster_rows = T, cluster_cols = F,clustering_method = "complete",color = colorRampPalette(rev(brewer.pal(n = 7, name = "RdYlBu")))(250), scale="row", main="All data after imputation. KNN, k=4")
pheatmap(data.pca.imp, cluster_rows = T, cluster_cols = F,clustering_distance_rows = "correlation",clustering_distance_cols = "correlation",clustering_method = "complete",color = colorRampPalette(rev(brewer.pal(n = 7, name = "RdYlBu")))(250), scale="row", main="All data after imputation. KNN, k=4")
data=data.pca
data.pca.imp=impute.knn(data ,k = 3, rowmax = 0.5, colmax = 0.8, maxp = 1500, rng.seed=362436069)
data.pca.imp=as.data.frame(data.pca.imp$data)
pheatmap(data.pca.imp, cluster_rows = T, cluster_cols = F,clustering_distance_rows = "correlation",clustering_distance_cols = "correlation",clustering_method = "complete",color = colorRampPalette(rev(brewer.pal(n = 7, name = "RdYlBu")))(250), scale="row", main="All data after imputation. KNN, k=4")
pheatmap(data.pca.imp, cluster_rows = T, cluster_cols = F,clustering_distance_rows = "correlation",clustering_distance_cols = "correlation",clustering_method = "complete",color = colorRampPalette(rev(brewer.pal(n = 7, name = "RdYlBu")))(250), scale="row", main="All data after imputation. KNN, k=3")
pheatmap(data.pca.imp, cluster_rows = T, cluster_cols = F,clustering_distance_rows = "correlation",clustering_distance_cols = "correlation",clustering_method = "complete",color = colorRampPalette(rev(brewer.pal(n = 7, name = "RdYlBu")))(250), scale="row", main="Filtered data after imputation. KNN, k=3")
hc.data=hcluster(data.pca, method = "correlation", diag = FALSE, upper = FALSE,
link = "complete", members = NULL, nbproc = 2,
doubleprecision = TRUE)
hc.data=hcluster(data.pca.imp, method = "correlation", diag = FALSE, upper = FALSE,
link = "complete", members = NULL, nbproc = 2,
doubleprecision = TRUE)
plot(hc.data)
mydata= data.pca.imp
wss <- (nrow(mydata)-1)*sum(apply(mydata,2,var))
for (i in 2:15) wss[i] <- sum(kmeans(mydata,
centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
dim(data.pca.imp)
library(amap)
s=set.seed(1234)
km=Kmeans(data.pca.imp,5,iter.max = 1500, nstart =34,
method = "correlation")
head(km)
data_clust <- cbind(data.pca.imp,km$cluster)#add column cluster number
o<- order(data_clust[,119])###sort by cluster number
data_clust <- data_clust[o, ]###sort by cluster number
head(data_clust)
data_km=data_clust
library(pheatmap)
library(plyr)
colnames(data_clust)[119]="Cluster"###add column name
#Go summaries
library(stringr)
Groups=colnames(data_clust)
Groups=str_replace(Groups,"C.*","C")
Groups=str_replace(Groups,"PH.*","PH")
Groups=str_replace(Groups,"PT.*","PT")
Groups=str_replace(Groups,"VH.*","VH")
Groups=str_replace(Groups,"VT.*","VT")
annotation=cbind(Groups,Groups )
rownames(annotation)=colnames(data_clust)
annot=as.data.frame(annotation[1:118,1])
colnames(annot)="Groups"
Groups=Groups[1:118]
data_clust=data_clust[,1:118]
#colnames(data_clust)=Groups
head(data_clust)
write.table(file="~/Documents/KAI/cytoskin/after_filt/31102014/data_kmeans5_knn4.txt",data_km, sep="\t", quote=F )
library(GOsummaries)
#gs_kmeans = gosummaries(km, components = 1:2, exp = data_clust, annotation = annotation)
#plot(gs_kmeans, fontsize = 8, classes = "Groups", filename = "figure3.pdf")
list=sort(km$cluster)
g1=names(list[list==1])
g2=names(list[list==2])
g3=names(list[list==3])
g4=names(list[list==4])
g5=names(list[list==5])
#g6=names(list[list==6])
gl=list(Cluster1 = g1, Cluster2 = g2, Cluster3 = g3, Cluster4 = g4, Cluster5 = g5)#, Cluster6 = g6)
gs = gosummaries(gl)
plot(gs, fontsize = 8)
gs_exp = add_expression.gosummaries(gs, exp = data_clust,
annotation = annot)
plot(gs_exp, fontsize = 8, classes = "Groups")
##end go summaries
gl
View(data.pca.imp)
s=set.seed(1234)
km=Kmeans(data.pca.imp,5,iter.max = 1500, nstart =35,
method = "correlation")
head(km)
data_clust <- cbind(data.pca.imp,km$cluster)#add column cluster number
o<- order(data_clust[,119])###sort by cluster number
data_clust <- data_clust[o, ]###sort by cluster number
head(data_clust)
data_km=data_clust
km=Kmeans(data.pca.imp,5,iter.max = 10500, nstart =35,
method = "correlation")
head(km)
km=Kmeans(data.pca.imp,5,iter.max = 10500, nstart =100,
method = "correlation")
head(km)
s=set.seed(1234)
km=Kmeans(data.pca.imp,5,iter.max = 10500, nstart =500,
method = "correlation")
head(km)
km=Kmeans(data.pca.imp,5,iter.max = 100500, nstart =500,
method = "correlation")
head(km)
data_clust <- cbind(data.pca.imp,km$cluster)#add column cluster number
o<- order(data_clust[,119])###sort by cluster number
data_clust <- data_clust[o, ]###sort by cluster number
head(data_clust)
data_km=data_clust
library(pheatmap)
library(plyr)
colnames(data_clust)[119]="Cluster"###add column name
#Go summaries
library(stringr)
Groups=colnames(data_clust)
Groups=str_replace(Groups,"C.*","C")
Groups=str_replace(Groups,"PH.*","PH")
Groups=str_replace(Groups,"PT.*","PT")
Groups=str_replace(Groups,"VH.*","VH")
Groups=str_replace(Groups,"VT.*","VT")
annotation=cbind(Groups,Groups )
rownames(annotation)=colnames(data_clust)
annot=as.data.frame(annotation[1:118,1])
colnames(annot)="Groups"
Groups=Groups[1:118]
data_clust=data_clust[,1:118]
#colnames(data_clust)=Groups
head(data_clust)
write.table(file="~/Documents/KAI/cytoskin/after_filt/31102014/data_kmeans5_knn4.txt",data_km, sep="\t", quote=F )
library(GOsummaries)
#gs_kmeans = gosummaries(km, components = 1:2, exp = data_clust, annotation = annotation)
#plot(gs_kmeans, fontsize = 8, classes = "Groups", filename = "figure3.pdf")
list=sort(km$cluster)
g1=names(list[list==1])
g2=names(list[list==2])
g3=names(list[list==3])
g4=names(list[list==4])
g5=names(list[list==5])
#g6=names(list[list==6])
gl=list(Cluster1 = g1, Cluster2 = g2, Cluster3 = g3, Cluster4 = g4, Cluster5 = g5)#, Cluster6 = g6)
gs = gosummaries(gl)
plot(gs, fontsize = 8)
gs_exp = add_expression.gosummaries(gs, exp = data_clust,
annotation = annot)
plot(gs_exp, fontsize = 8, classes = "Groups")
data.pca.imp=impute.knn(data ,k = 4, rowmax = 0.5, colmax = 0.8, maxp = 1500, rng.seed=362436069)
data.pca.imp=as.data.frame(data.pca.imp$data)
pheatmap(data.pca.imp, cluster_rows = T, cluster_cols = F,clustering_distance_rows = "correlation",clustering_distance_cols = "correlation",clustering_method = "complete",color = colorRampPalette(rev(brewer.pal(n = 7, name = "RdYlBu")))(250), scale="row", main="Filtered data after imputation. KNN, k=3")
pheatmap(data.pca.imp, cluster_rows = T, cluster_cols = F,clustering_distance_rows = "correlation",clustering_distance_cols = "correlation",clustering_method = "complete",color = colorRampPalette(rev(brewer.pal(n = 7, name = "RdYlBu")))(250), scale="row", main="Filtered data after imputation. KNN, k=4")
hc.data=hcluster(data.pca.imp, method = "correlation", diag = FALSE, upper = FALSE,
link = "complete", members = NULL, nbproc = 2,
doubleprecision = TRUE)
plot(hc.data)
mydata= data.pca.imp
wss <- (nrow(mydata)-1)*sum(apply(mydata,2,var))
for (i in 2:15) wss[i] <- sum(kmeans(mydata,
centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
library(amap)
s=set.seed(1234)
km=Kmeans(data.pca.imp,5,iter.max = 100500, nstart =500,
method = "correlation")
head(km)
data_clust <- cbind(data.pca.imp,km$cluster)#add column cluster number
o<- order(data_clust[,119])###sort by cluster number
data_clust <- data_clust[o, ]###sort by cluster number
head(data_clust)
data_km=data_clust
library(pheatmap)
library(plyr)
colnames(data_clust)[119]="Cluster"###add column name
#Go summaries
library(stringr)
Groups=colnames(data_clust)
Groups=str_replace(Groups,"C.*","C")
Groups=str_replace(Groups,"PH.*","PH")
Groups=str_replace(Groups,"PT.*","PT")
Groups=str_replace(Groups,"VH.*","VH")
Groups=str_replace(Groups,"VT.*","VT")
annotation=cbind(Groups,Groups )
rownames(annotation)=colnames(data_clust)
annot=as.data.frame(annotation[1:118,1])
colnames(annot)="Groups"
Groups=Groups[1:118]
data_clust=data_clust[,1:118]
#colnames(data_clust)=Groups
head(data_clust)
write.table(file="~/Documents/KAI/cytoskin/after_filt/31102014/data_kmeans5_knn4.txt",data_km, sep="\t", quote=F )
library(GOsummaries)
#gs_kmeans = gosummaries(km, components = 1:2, exp = data_clust, annotation = annotation)
#plot(gs_kmeans, fontsize = 8, classes = "Groups", filename = "figure3.pdf")
list=sort(km$cluster)
g1=names(list[list==1])
g2=names(list[list==2])
g3=names(list[list==3])
g4=names(list[list==4])
g5=names(list[list==5])
#g6=names(list[list==6])
gl=list(Cluster1 = g1, Cluster2 = g2, Cluster3 = g3, Cluster4 = g4, Cluster5 = g5)#, Cluster6 = g6)
gs = gosummaries(gl)
plot(gs, fontsize = 8)
gs_exp = add_expression.gosummaries(gs, exp = data_clust,
annotation = annot)
plot(gs_exp, fontsize = 8, classes = "Groups")
library(ggplot2)
library(stringr)
library(gridBase)
library(gridExtra)
Groups=rownames(na.omit(data.pca))
Groups=str_replace(Groups,"C.*","C")
Groups=str_replace(Groups,"PH.*","PH")
Groups=str_replace(Groups,"PT.*","PT")
Groups=str_replace(Groups,"VH.*","VH")
Groups=str_replace(Groups,"VT.*","VT")
Samples=rownames(na.omit(data.pca.knn))
a=qplot(pca.all$x[,1],pca.all$x[,2],xlab="Principal Component 1",ylab= "Principal Component 2",  colour = Groups, label=Samples)+scale_colour_manual(values=c("black","darkblue","seagreen3","red","darkorchid1"))
a1=a+geom_text(size=3,hjust=0.1,vjust=1.6,position = "identity") + theme(legend.position="none")
b=qplot(pca.all$x[,1],pca.all$x[,3],xlab="Principal Component 1",ylab= "Principal Component 3",   colour = Groups, label=Samples)+scale_colour_manual(values=c("black","darkblue","seagreen3","red","darkorchid1"))
b1=b+geom_text(size=3,hjust=0.1,vjust=1.6,position = "identity") + theme(legend.position="none")
c=qplot(pca.all$x[,2],pca.all$x[,3],xlab="Principal Component 2",ylab= "Principal Component 3",  colour = Groups, label=Samples) +scale_colour_manual(values=c("black","darkblue","seagreen3","red","darkorchid1"))
c1=c+geom_text(size=3,hjust=0.1,vjust=1.6,position = "identity") + theme(legend.position="none")
g_legend<-function(a.gplot){
tmp <- ggplot_gtable(ggplot_build(a.gplot))
leg <- which(sapply(tmp$grobs, function(x) x$name) == "guide-box")
legend <- tmp$grobs[[leg]]
legend
}
legend <- g_legend(a)
grid.arrange(a1,b1,c1, legend,
ncol=2, nrow=2, widths=c(1/2,1/2))
data.pca.knn=data.pca.imp
#data.pca=data.pca.new
data.pca.knn=t(data.pca.knn)
pca.all=prcomp(data.pca.knn, scale=T, center=T)#, na.action=na.omit)
#pca.all=prcomp(~., data=data.pca, scale=T, center=T, na.action=na.omit)
summary(pca.all)
library(ggplot2)
library(stringr)
library(gridBase)
library(gridExtra)
Groups=rownames(na.omit(data.pca))
Groups=str_replace(Groups,"C.*","C")
Groups=str_replace(Groups,"PH.*","PH")
Groups=str_replace(Groups,"PT.*","PT")
Groups=str_replace(Groups,"VH.*","VH")
Groups=str_replace(Groups,"VT.*","VT")
Samples=rownames(na.omit(data.pca.knn))
a=qplot(pca.all$x[,1],pca.all$x[,2],xlab="Principal Component 1",ylab= "Principal Component 2",  colour = Groups, label=Samples)+scale_colour_manual(values=c("black","darkblue","seagreen3","red","darkorchid1"))
a1=a+geom_text(size=3,hjust=0.1,vjust=1.6,position = "identity") + theme(legend.position="none")
b=qplot(pca.all$x[,1],pca.all$x[,3],xlab="Principal Component 1",ylab= "Principal Component 3",   colour = Groups, label=Samples)+scale_colour_manual(values=c("black","darkblue","seagreen3","red","darkorchid1"))
b1=b+geom_text(size=3,hjust=0.1,vjust=1.6,position = "identity") + theme(legend.position="none")
c=qplot(pca.all$x[,2],pca.all$x[,3],xlab="Principal Component 2",ylab= "Principal Component 3",  colour = Groups, label=Samples) +scale_colour_manual(values=c("black","darkblue","seagreen3","red","darkorchid1"))
c1=c+geom_text(size=3,hjust=0.1,vjust=1.6,position = "identity") + theme(legend.position="none")
g_legend<-function(a.gplot){
tmp <- ggplot_gtable(ggplot_build(a.gplot))
leg <- which(sapply(tmp$grobs, function(x) x$name) == "guide-box")
legend <- tmp$grobs[[leg]]
legend
}
legend <- g_legend(a)
grid.arrange(a1,b1,c1, legend,
ncol=2, nrow=2, widths=c(1/2,1/2))
rownames(na.omit(data.pca.imp))
rownames(na.omit(data.pca))
rownames(na.omit(data.pca.knn))
data.pca.knn=data.pca.imp
#data.pca=data.pca.new
data.pca.knn=t(data.pca.knn)
pca.all=prcomp(data.pca.knn, scale=T, center=T)#, na.action=na.omit)
#pca.all=prcomp(~., data=data.pca, scale=T, center=T, na.action=na.omit)
summary(pca.all)
#knn4 all data scale
#Importance of components:
#  PC1    PC2     PC3     PC4     PC5    PC6     PC7     PC8     PC9    PC10    PC11    PC12    PC13
#Standard deviation     3.8176 2.0759 1.66184 1.33470 1.25385 1.0846 1.05837 0.92330 0.87104 0.82193 0.76828 0.74659 0.72277
#Proportion of Variance 0.4286 0.1268 0.08123 0.05239 0.04624 0.0346 0.03295 0.02507 0.02232 0.01987 0.01736 0.01639 0.01536
#Cumulative Proportion  0.4286 0.5554 0.63661 0.68901 0.73525 0.7699 0.80279 0.82787 0.85018 0.87005 0.88741 0.90381 0.91917
#PC14    PC15    PC16    PC17    PC18    PC19    PC20    PC21    PC22    PC23    PC24    PC25
#Standard deviation     0.66644 0.65401 0.57018 0.54817 0.49008 0.47415 0.43475 0.39304 0.34666 0.32324 0.31446 0.24228
#Proportion of Variance 0.01306 0.01258 0.00956 0.00884 0.00706 0.00661 0.00556 0.00454 0.00353 0.00307 0.00291 0.00173
#Cumulative Proportion  0.93223 0.94481 0.95438 0.96321 0.97028 0.97689 0.98245 0.98699 0.99053 0.99360 0.99651 0.99823
#PC26    PC27    PC28    PC29    PC30     PC31     PC32     PC33      PC34
#Standard deviation     0.16733 0.14204 0.10537 0.02241 0.01424 0.005052 0.003422 0.002665 2.994e-16
#Proportion of Variance 0.00082 0.00059 0.00033 0.00001 0.00001 0.000000 0.000000 0.000000 0.000e+00
#Cumulative Proportion  0.99906 0.99965 0.99998 0.99999 1.00000 1.000000 1.000000 1.000000 1.000e+00
#plot(pca.all$x[,1],pca.all$x[,2])
#plot(pca.all$x[,1],pca.all$x[,3])
####Plot 3first PCs and legend
#libraries used
library(ggplot2)
library(stringr)
library(gridBase)
library(gridExtra)
Groups=rownames(na.omit(data.pca.knn))
Groups=str_replace(Groups,"C.*","C")
Groups=str_replace(Groups,"PH.*","PH")
Groups=str_replace(Groups,"PT.*","PT")
Groups=str_replace(Groups,"VH.*","VH")
Groups=str_replace(Groups,"VT.*","VT")
Samples=rownames(na.omit(data.pca.knn))
a=qplot(pca.all$x[,1],pca.all$x[,2],xlab="Principal Component 1",ylab= "Principal Component 2",  colour = Groups, label=Samples)+scale_colour_manual(values=c("black","darkblue","seagreen3","red","darkorchid1"))
a1=a+geom_text(size=3,hjust=0.1,vjust=1.6,position = "identity") + theme(legend.position="none")
b=qplot(pca.all$x[,1],pca.all$x[,3],xlab="Principal Component 1",ylab= "Principal Component 3",   colour = Groups, label=Samples)+scale_colour_manual(values=c("black","darkblue","seagreen3","red","darkorchid1"))
b1=b+geom_text(size=3,hjust=0.1,vjust=1.6,position = "identity") + theme(legend.position="none")
c=qplot(pca.all$x[,2],pca.all$x[,3],xlab="Principal Component 2",ylab= "Principal Component 3",  colour = Groups, label=Samples) +scale_colour_manual(values=c("black","darkblue","seagreen3","red","darkorchid1"))
c1=c+geom_text(size=3,hjust=0.1,vjust=1.6,position = "identity") + theme(legend.position="none")
g_legend<-function(a.gplot){
tmp <- ggplot_gtable(ggplot_build(a.gplot))
leg <- which(sapply(tmp$grobs, function(x) x$name) == "guide-box")
legend <- tmp$grobs[[leg]]
legend
}
legend <- g_legend(a)
grid.arrange(a1,b1,c1, legend,
ncol=2, nrow=2, widths=c(1/2,1/2))
library(pvclust)
result=pvclust(t(data.pca.imp), method.hclust="complete",
method.dist="correlation",
nboot=10000, r=seq(.5,1.4,by=.1), store=FALSE, weight=FALSE)
plot(result)
pvrect(result, alpha=0.95)
cutree()
?cutree()
cutree(hc, k=4)
cutree(hc.data, k=5)
ct=cutree(hc.data, k=5)
str(ct)
ct1=as.data.frame(ct)
str(ct1)
sort(ct)
as.character(ct)
as.character(names(ct))
as.character(names(sort(ct))
)
hc.cl=as.character(names(sort(ct))
)
hc.cl
hc.cl.1=hc.cl[1:15]
hc.cl.1=hc.cl[1:15]
hc.cl.2=hc.cl[16:22]
hc.cl.3=hc.cl[23:25]
hc.cl.4=hc.cl[26:29]
hc.cl.5=hc.cl[30:35]
library(GOsummaries)
#gs_kmeans = gosummaries(km, components = 1:2, exp = data_clust, annotation = annotation)
#plot(gs_kmeans, fontsize = 8, classes = "Groups", filename = "figure3.pdf")
list=sort(km$cluster)
g1=hc.cl.1
g2=hc.cl.2
g3=hc.cl.3
g4=hc.cl.4
g5=hc.cl.5
gl=list(Cluster1 = g1, Cluster2 = g2, Cluster3 = g3, Cluster4 = g4, Cluster5 = g5)#, Cluster6 = g6)
gs = gosummaries(gl)
library(GOsummaries)
#gs_kmeans = gosummaries(km, components = 1:2, exp = data_clust, annotation = annotation)
#plot(gs_kmeans, fontsize = 8, classes = "Groups", filename = "figure3.pdf")
g1=hc.cl.1
g2=hc.cl.2
g3=hc.cl.3
g4=hc.cl.4
g5=hc.cl.5
gl=list(Cluster1 = g1, Cluster2 = g2, Cluster3 = g3, Cluster4 = g4, Cluster5 = g5)#, Cluster6 = g6)
gs = gosummaries(gl)
plot(gs, fontsize = 8)
gs_exp = add_expression.gosummaries(gs, exp = data_clust,
annotation = annot)
plot(gs_exp, fontsize = 8, classes = "Groups")
plot(gs_exp, fontsize = 8, classes = "Groups", filename = "Gosummaries_knn4_hc.pdf")
?cutree()
hc.cl
sort(ct)
hc.cl.1
g1=c("KLRK1","TRGC1")
g2=hc.cl.1
g3=c("CXCL10","IFNG")
g1=c("KLRK1","TRGC1")
g2=hc.cl.1
g3=c("CXCL10","IFNG")
gl=list(Cluster1 = g1, Cluster2 = g2, Cluster3 = g3)#, Cluster6 = g6)
gs = gosummaries(gl)
plot(gs, fontsize = 8)
gs_exp = add_expression.gosummaries(gs, exp = data_clust,
annotation = annot)
plot(gs_exp, fontsize = 8, classes = "Groups")
